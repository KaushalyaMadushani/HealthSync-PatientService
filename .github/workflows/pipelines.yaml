#name: Patient Service Build and Deploy to GKE
#
#on:
#  push:
#    branches:
#      - main
#
#env:
#  PROJECT_ID: ${{secrets.GKE_PROJECT}}
#  GKE_CLUSTER: healthsync-cluster-1
#  GKE_ZONE: us-central1-c
#  DEPLOYMENT_NAME: patient-service-github-actions-gke-deployment
#  IMAGE: github-actions-gke-image
#  TAG: 1.0.0
#
#jobs:
#  setup-build-publish-deploy:
#    name: Setup Build Publish Deploy
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout Repository
#        uses: actions/checkout@v2
#
#      - name: Setup JDK 17
#        uses: actions/setup-java@v1
#        with:
#          java-version: 17
#          server-id: github
#          settings-path: ${{ github.workspace }}
#
#      - name: Build with Maven
#        run: mvn clean package -DskipTests
#
#      - name: Setup Google Cloud CLI
#        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
#        env:
#          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
#        with:
#          service_account_key: ${{secrets.GKE_SA_KEY}}
#          project_id: ${{secrets.GKE_PROJECT}}
#
#      - name: Configure Docker
#        run: |-
#          gcloud --quiet auth configure-docker
#
#      - name: Get GKE Credentials
#        run: |-
#          gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
#
#      - name: Build Docker Image
#        run: |-
#          docker build --tag "gcr.io/$PROJECT_ID/$IMAGE:$TAG"
#
#      - name: Publish Docker Image to GCR
#        run: |-
#          docker push "gcr.io/$PROJECT_ID/$IMAGE:$TAG"
#
#      - name: Set up Kustomize
#        run: |-
#          curl -sfLo kustomize https://github.com/kubernetes-sigs/kcustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
#          chmod u+x ./customize
#
#      - name: Deploy Image to GKE cluster
#        run: |-
#          ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$TAG
#          ./kustomize build . | kubectl apply -f -
#          kubectl rollout status deployment/$DEPLOYMENT_NAME
#          kubectl get services -o wide
#
#

name: Patient Service Build and Deploy to GKE

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: healthsync-cluster-1
  GKE_ZONE: us-central1-c
  DEPLOYMENT_NAME: patient-service
  IMAGE: patient-service
  TAG: 1.0.0

jobs:
  build-publish-deploy:
    name: Build, Publish Docker Image and Deploy to GKE
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Setup JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17

      - name: Build with Maven
        run: mvn clean package -DskipTests

      - name: Authenticate Google Cloud
        uses: google-github-actions/auth@v0.11.0
        with:
          credentials_json: ${{ secrets.GKE_SA_KEY }}

      - name: Configure Docker with GCP
        run: gcloud --quiet auth configure-docker

      - name: Build Docker Image
        run: docker build -t "gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ env.TAG }}" .

      - name: Push Docker Image to GCR
        run: docker push "gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ env.TAG }}"

      - name: Get GKE Credentials
        run: gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} --zone ${{ env.GKE_ZONE }}

      - name: Deploy to GKE
        run: |-
          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} app=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ env.TAG }}
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}





#      - name: Setup Google Cloud CLI
#        uses: GoogleCloudPlatform/github-actions/setup-gcloud@0.1.3
#        env:
#          ACTIONS_ALLOW_UNSECURE_COMMANDS: true
#        with:
#          service_account_key: ${{ secrets.GKE_SA_KEY }}
#          project: ${{ env.PROJECT_ID }}
#
#      - name: Authenticate with Google Cloud
#        run: gcloud auth activate-service-account --key-file <(echo "${{ secrets.GKE_SA_KEY }}")
#
#      - name: Set Google Cloud Configuration
#        run: gcloud config set project ${{ env.PROJECT_ID }}
#
#      - name: Build and Push Docker Image
#        run: |
#          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ env.TAG }} .
#          echo "Docker image built and tagged"
#          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ env.TAG }}
#        env:
#          DOCKER_CLI_AUTH_CONFIG_JSON: ${{ secrets.DOCKER_CONFIG_JSON }}
#
#      - name: Deploy to GKE
#        run: |
#          kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} patient-service=gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }}:${{ env.TAG }}
#          echo "Deployment complete"
